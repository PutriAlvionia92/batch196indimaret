@model Indimaret.Model.MBarang

@using (Html.BeginForm(null,null, FormMethod.Post, new { id="idFrmSaveBrg"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MBarang</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TokoID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TokoID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TokoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KdBarang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KdBarang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KdBarang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NmBarang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NmBarang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NmBarang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AslPabrik, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AslPabrik, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AslPabrik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JmlBarang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JmlBarang, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JmlBarang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LmKadaluarsa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LmKadaluarsa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LmKadaluarsa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <button type="button" class="btn btn-primary" id="idBtnSaveData">Save</button>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $('#idBtnSaveData').click(function ()
    {
        debugger;
        var vdbrg = $('#idFrmSaveBrg').serialize();
        $.ajax
        ({
            url: '/Brg/Save',
            data: vdbrg,
            method: 'Post',
            success: function(mdl)
            {
                debugger;
                if(mdl.Simpan=="Berhasil")
                {
                    alert("Data Berhasil Disimpan");
                    $('#idMdlCreateBrg').close;
                    location.reload();
                }
                else
                {
                    alert("Data Gagal Disimpan");
                }

            },
            error: function(mdl)
            {
                debugger;
            }
        });
    });
</script>
